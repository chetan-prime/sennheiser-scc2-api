/*
TCC M 3rd party API Release

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiAudioRoomInUseActivityLevelGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiAudioRoomInUseActivityLevelGet200Response{}

// ApiAudioRoomInUseActivityLevelGet200Response struct for ApiAudioRoomInUseActivityLevelGet200Response
type ApiAudioRoomInUseActivityLevelGet200Response struct {
	// Current near-end activity in dB
	Peak *int32 `json:"peak,omitempty"`
}

// NewApiAudioRoomInUseActivityLevelGet200Response instantiates a new ApiAudioRoomInUseActivityLevelGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiAudioRoomInUseActivityLevelGet200Response() *ApiAudioRoomInUseActivityLevelGet200Response {
	this := ApiAudioRoomInUseActivityLevelGet200Response{}
	return &this
}

// NewApiAudioRoomInUseActivityLevelGet200ResponseWithDefaults instantiates a new ApiAudioRoomInUseActivityLevelGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiAudioRoomInUseActivityLevelGet200ResponseWithDefaults() *ApiAudioRoomInUseActivityLevelGet200Response {
	this := ApiAudioRoomInUseActivityLevelGet200Response{}
	return &this
}

// GetPeak returns the Peak field value if set, zero value otherwise.
func (o *ApiAudioRoomInUseActivityLevelGet200Response) GetPeak() int32 {
	if o == nil || IsNil(o.Peak) {
		var ret int32
		return ret
	}
	return *o.Peak
}

// GetPeakOk returns a tuple with the Peak field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAudioRoomInUseActivityLevelGet200Response) GetPeakOk() (*int32, bool) {
	if o == nil || IsNil(o.Peak) {
		return nil, false
	}
	return o.Peak, true
}

// HasPeak returns a boolean if a field has been set.
func (o *ApiAudioRoomInUseActivityLevelGet200Response) HasPeak() bool {
	if o != nil && !IsNil(o.Peak) {
		return true
	}

	return false
}

// SetPeak gets a reference to the given int32 and assigns it to the Peak field.
func (o *ApiAudioRoomInUseActivityLevelGet200Response) SetPeak(v int32) {
	o.Peak = &v
}

func (o ApiAudioRoomInUseActivityLevelGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiAudioRoomInUseActivityLevelGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Peak) {
		toSerialize["peak"] = o.Peak
	}
	return toSerialize, nil
}

type NullableApiAudioRoomInUseActivityLevelGet200Response struct {
	value *ApiAudioRoomInUseActivityLevelGet200Response
	isSet bool
}

func (v NullableApiAudioRoomInUseActivityLevelGet200Response) Get() *ApiAudioRoomInUseActivityLevelGet200Response {
	return v.value
}

func (v *NullableApiAudioRoomInUseActivityLevelGet200Response) Set(val *ApiAudioRoomInUseActivityLevelGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableApiAudioRoomInUseActivityLevelGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableApiAudioRoomInUseActivityLevelGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiAudioRoomInUseActivityLevelGet200Response(val *ApiAudioRoomInUseActivityLevelGet200Response) *NullableApiAudioRoomInUseActivityLevelGet200Response {
	return &NullableApiAudioRoomInUseActivityLevelGet200Response{value: val, isSet: true}
}

func (v NullableApiAudioRoomInUseActivityLevelGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiAudioRoomInUseActivityLevelGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


