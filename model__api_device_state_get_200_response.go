/*
TCC M 3rd party API Release

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiDeviceStateGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiDeviceStateGet200Response{}

// ApiDeviceStateGet200Response struct for ApiDeviceStateGet200Response
type ApiDeviceStateGet200Response struct {
	State *string `json:"state,omitempty"`
	Warnings []string `json:"warnings,omitempty"`
}

// NewApiDeviceStateGet200Response instantiates a new ApiDeviceStateGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiDeviceStateGet200Response() *ApiDeviceStateGet200Response {
	this := ApiDeviceStateGet200Response{}
	var state string = "Normal"
	this.State = &state
	return &this
}

// NewApiDeviceStateGet200ResponseWithDefaults instantiates a new ApiDeviceStateGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiDeviceStateGet200ResponseWithDefaults() *ApiDeviceStateGet200Response {
	this := ApiDeviceStateGet200Response{}
	var state string = "Normal"
	this.State = &state
	return &this
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ApiDeviceStateGet200Response) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiDeviceStateGet200Response) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ApiDeviceStateGet200Response) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ApiDeviceStateGet200Response) SetState(v string) {
	o.State = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *ApiDeviceStateGet200Response) GetWarnings() []string {
	if o == nil || IsNil(o.Warnings) {
		var ret []string
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiDeviceStateGet200Response) GetWarningsOk() ([]string, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *ApiDeviceStateGet200Response) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []string and assigns it to the Warnings field.
func (o *ApiDeviceStateGet200Response) SetWarnings(v []string) {
	o.Warnings = v
}

func (o ApiDeviceStateGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiDeviceStateGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableApiDeviceStateGet200Response struct {
	value *ApiDeviceStateGet200Response
	isSet bool
}

func (v NullableApiDeviceStateGet200Response) Get() *ApiDeviceStateGet200Response {
	return v.value
}

func (v *NullableApiDeviceStateGet200Response) Set(val *ApiDeviceStateGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableApiDeviceStateGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableApiDeviceStateGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiDeviceStateGet200Response(val *ApiDeviceStateGet200Response) *NullableApiDeviceStateGet200Response {
	return &NullableApiDeviceStateGet200Response{value: val, isSet: true}
}

func (v NullableApiDeviceStateGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiDeviceStateGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


