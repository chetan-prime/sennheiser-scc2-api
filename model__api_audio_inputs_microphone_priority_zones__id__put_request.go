/*
TCC M 3rd party API Release

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiAudioInputsMicrophonePriorityZonesIdPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiAudioInputsMicrophonePriorityZonesIdPutRequest{}

// ApiAudioInputsMicrophonePriorityZonesIdPutRequest struct for ApiAudioInputsMicrophonePriorityZonesIdPutRequest
type ApiAudioInputsMicrophonePriorityZonesIdPutRequest struct {
	Enabled *bool `json:"enabled,omitempty"`
	// Unitless multiplicator
	Weight *float32 `json:"weight,omitempty"`
	Elevation *ApiAudioInputsMicrophonePriorityZonesIdPutRequestElevation `json:"elevation,omitempty"`
	Azimuth *ApiAudioInputsMicrophonePriorityZonesIdPutRequestAzimuth `json:"azimuth,omitempty"`
}

// NewApiAudioInputsMicrophonePriorityZonesIdPutRequest instantiates a new ApiAudioInputsMicrophonePriorityZonesIdPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiAudioInputsMicrophonePriorityZonesIdPutRequest() *ApiAudioInputsMicrophonePriorityZonesIdPutRequest {
	this := ApiAudioInputsMicrophonePriorityZonesIdPutRequest{}
	return &this
}

// NewApiAudioInputsMicrophonePriorityZonesIdPutRequestWithDefaults instantiates a new ApiAudioInputsMicrophonePriorityZonesIdPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiAudioInputsMicrophonePriorityZonesIdPutRequestWithDefaults() *ApiAudioInputsMicrophonePriorityZonesIdPutRequest {
	this := ApiAudioInputsMicrophonePriorityZonesIdPutRequest{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ApiAudioInputsMicrophonePriorityZonesIdPutRequest) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAudioInputsMicrophonePriorityZonesIdPutRequest) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ApiAudioInputsMicrophonePriorityZonesIdPutRequest) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ApiAudioInputsMicrophonePriorityZonesIdPutRequest) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *ApiAudioInputsMicrophonePriorityZonesIdPutRequest) GetWeight() float32 {
	if o == nil || IsNil(o.Weight) {
		var ret float32
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAudioInputsMicrophonePriorityZonesIdPutRequest) GetWeightOk() (*float32, bool) {
	if o == nil || IsNil(o.Weight) {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *ApiAudioInputsMicrophonePriorityZonesIdPutRequest) HasWeight() bool {
	if o != nil && !IsNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given float32 and assigns it to the Weight field.
func (o *ApiAudioInputsMicrophonePriorityZonesIdPutRequest) SetWeight(v float32) {
	o.Weight = &v
}

// GetElevation returns the Elevation field value if set, zero value otherwise.
func (o *ApiAudioInputsMicrophonePriorityZonesIdPutRequest) GetElevation() ApiAudioInputsMicrophonePriorityZonesIdPutRequestElevation {
	if o == nil || IsNil(o.Elevation) {
		var ret ApiAudioInputsMicrophonePriorityZonesIdPutRequestElevation
		return ret
	}
	return *o.Elevation
}

// GetElevationOk returns a tuple with the Elevation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAudioInputsMicrophonePriorityZonesIdPutRequest) GetElevationOk() (*ApiAudioInputsMicrophonePriorityZonesIdPutRequestElevation, bool) {
	if o == nil || IsNil(o.Elevation) {
		return nil, false
	}
	return o.Elevation, true
}

// HasElevation returns a boolean if a field has been set.
func (o *ApiAudioInputsMicrophonePriorityZonesIdPutRequest) HasElevation() bool {
	if o != nil && !IsNil(o.Elevation) {
		return true
	}

	return false
}

// SetElevation gets a reference to the given ApiAudioInputsMicrophonePriorityZonesIdPutRequestElevation and assigns it to the Elevation field.
func (o *ApiAudioInputsMicrophonePriorityZonesIdPutRequest) SetElevation(v ApiAudioInputsMicrophonePriorityZonesIdPutRequestElevation) {
	o.Elevation = &v
}

// GetAzimuth returns the Azimuth field value if set, zero value otherwise.
func (o *ApiAudioInputsMicrophonePriorityZonesIdPutRequest) GetAzimuth() ApiAudioInputsMicrophonePriorityZonesIdPutRequestAzimuth {
	if o == nil || IsNil(o.Azimuth) {
		var ret ApiAudioInputsMicrophonePriorityZonesIdPutRequestAzimuth
		return ret
	}
	return *o.Azimuth
}

// GetAzimuthOk returns a tuple with the Azimuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAudioInputsMicrophonePriorityZonesIdPutRequest) GetAzimuthOk() (*ApiAudioInputsMicrophonePriorityZonesIdPutRequestAzimuth, bool) {
	if o == nil || IsNil(o.Azimuth) {
		return nil, false
	}
	return o.Azimuth, true
}

// HasAzimuth returns a boolean if a field has been set.
func (o *ApiAudioInputsMicrophonePriorityZonesIdPutRequest) HasAzimuth() bool {
	if o != nil && !IsNil(o.Azimuth) {
		return true
	}

	return false
}

// SetAzimuth gets a reference to the given ApiAudioInputsMicrophonePriorityZonesIdPutRequestAzimuth and assigns it to the Azimuth field.
func (o *ApiAudioInputsMicrophonePriorityZonesIdPutRequest) SetAzimuth(v ApiAudioInputsMicrophonePriorityZonesIdPutRequestAzimuth) {
	o.Azimuth = &v
}

func (o ApiAudioInputsMicrophonePriorityZonesIdPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiAudioInputsMicrophonePriorityZonesIdPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}
	if !IsNil(o.Elevation) {
		toSerialize["elevation"] = o.Elevation
	}
	if !IsNil(o.Azimuth) {
		toSerialize["azimuth"] = o.Azimuth
	}
	return toSerialize, nil
}

type NullableApiAudioInputsMicrophonePriorityZonesIdPutRequest struct {
	value *ApiAudioInputsMicrophonePriorityZonesIdPutRequest
	isSet bool
}

func (v NullableApiAudioInputsMicrophonePriorityZonesIdPutRequest) Get() *ApiAudioInputsMicrophonePriorityZonesIdPutRequest {
	return v.value
}

func (v *NullableApiAudioInputsMicrophonePriorityZonesIdPutRequest) Set(val *ApiAudioInputsMicrophonePriorityZonesIdPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiAudioInputsMicrophonePriorityZonesIdPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiAudioInputsMicrophonePriorityZonesIdPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiAudioInputsMicrophonePriorityZonesIdPutRequest(val *ApiAudioInputsMicrophonePriorityZonesIdPutRequest) *NullableApiAudioInputsMicrophonePriorityZonesIdPutRequest {
	return &NullableApiAudioInputsMicrophonePriorityZonesIdPutRequest{value: val, isSet: true}
}

func (v NullableApiAudioInputsMicrophonePriorityZonesIdPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiAudioInputsMicrophonePriorityZonesIdPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


