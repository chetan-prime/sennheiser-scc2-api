/*
TCC M 3rd party API Release

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiAudioInputsMicrophoneBeamDirectionGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiAudioInputsMicrophoneBeamDirectionGet200Response{}

// ApiAudioInputsMicrophoneBeamDirectionGet200Response struct for ApiAudioInputsMicrophoneBeamDirectionGet200Response
type ApiAudioInputsMicrophoneBeamDirectionGet200Response struct {
	// Angle in degrees
	Azimuth *int32 `json:"azimuth,omitempty"`
	// Angle in degrees
	Elevation *int32 `json:"elevation,omitempty"`
	// Indicates whether the beam is in beam-freeze, hence farend activity is recognized
	BeamFreezeActive *bool `json:"beamFreezeActive,omitempty"`
}

// NewApiAudioInputsMicrophoneBeamDirectionGet200Response instantiates a new ApiAudioInputsMicrophoneBeamDirectionGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiAudioInputsMicrophoneBeamDirectionGet200Response() *ApiAudioInputsMicrophoneBeamDirectionGet200Response {
	this := ApiAudioInputsMicrophoneBeamDirectionGet200Response{}
	return &this
}

// NewApiAudioInputsMicrophoneBeamDirectionGet200ResponseWithDefaults instantiates a new ApiAudioInputsMicrophoneBeamDirectionGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiAudioInputsMicrophoneBeamDirectionGet200ResponseWithDefaults() *ApiAudioInputsMicrophoneBeamDirectionGet200Response {
	this := ApiAudioInputsMicrophoneBeamDirectionGet200Response{}
	return &this
}

// GetAzimuth returns the Azimuth field value if set, zero value otherwise.
func (o *ApiAudioInputsMicrophoneBeamDirectionGet200Response) GetAzimuth() int32 {
	if o == nil || IsNil(o.Azimuth) {
		var ret int32
		return ret
	}
	return *o.Azimuth
}

// GetAzimuthOk returns a tuple with the Azimuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAudioInputsMicrophoneBeamDirectionGet200Response) GetAzimuthOk() (*int32, bool) {
	if o == nil || IsNil(o.Azimuth) {
		return nil, false
	}
	return o.Azimuth, true
}

// HasAzimuth returns a boolean if a field has been set.
func (o *ApiAudioInputsMicrophoneBeamDirectionGet200Response) HasAzimuth() bool {
	if o != nil && !IsNil(o.Azimuth) {
		return true
	}

	return false
}

// SetAzimuth gets a reference to the given int32 and assigns it to the Azimuth field.
func (o *ApiAudioInputsMicrophoneBeamDirectionGet200Response) SetAzimuth(v int32) {
	o.Azimuth = &v
}

// GetElevation returns the Elevation field value if set, zero value otherwise.
func (o *ApiAudioInputsMicrophoneBeamDirectionGet200Response) GetElevation() int32 {
	if o == nil || IsNil(o.Elevation) {
		var ret int32
		return ret
	}
	return *o.Elevation
}

// GetElevationOk returns a tuple with the Elevation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAudioInputsMicrophoneBeamDirectionGet200Response) GetElevationOk() (*int32, bool) {
	if o == nil || IsNil(o.Elevation) {
		return nil, false
	}
	return o.Elevation, true
}

// HasElevation returns a boolean if a field has been set.
func (o *ApiAudioInputsMicrophoneBeamDirectionGet200Response) HasElevation() bool {
	if o != nil && !IsNil(o.Elevation) {
		return true
	}

	return false
}

// SetElevation gets a reference to the given int32 and assigns it to the Elevation field.
func (o *ApiAudioInputsMicrophoneBeamDirectionGet200Response) SetElevation(v int32) {
	o.Elevation = &v
}

// GetBeamFreezeActive returns the BeamFreezeActive field value if set, zero value otherwise.
func (o *ApiAudioInputsMicrophoneBeamDirectionGet200Response) GetBeamFreezeActive() bool {
	if o == nil || IsNil(o.BeamFreezeActive) {
		var ret bool
		return ret
	}
	return *o.BeamFreezeActive
}

// GetBeamFreezeActiveOk returns a tuple with the BeamFreezeActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAudioInputsMicrophoneBeamDirectionGet200Response) GetBeamFreezeActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.BeamFreezeActive) {
		return nil, false
	}
	return o.BeamFreezeActive, true
}

// HasBeamFreezeActive returns a boolean if a field has been set.
func (o *ApiAudioInputsMicrophoneBeamDirectionGet200Response) HasBeamFreezeActive() bool {
	if o != nil && !IsNil(o.BeamFreezeActive) {
		return true
	}

	return false
}

// SetBeamFreezeActive gets a reference to the given bool and assigns it to the BeamFreezeActive field.
func (o *ApiAudioInputsMicrophoneBeamDirectionGet200Response) SetBeamFreezeActive(v bool) {
	o.BeamFreezeActive = &v
}

func (o ApiAudioInputsMicrophoneBeamDirectionGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiAudioInputsMicrophoneBeamDirectionGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Azimuth) {
		toSerialize["azimuth"] = o.Azimuth
	}
	if !IsNil(o.Elevation) {
		toSerialize["elevation"] = o.Elevation
	}
	if !IsNil(o.BeamFreezeActive) {
		toSerialize["beamFreezeActive"] = o.BeamFreezeActive
	}
	return toSerialize, nil
}

type NullableApiAudioInputsMicrophoneBeamDirectionGet200Response struct {
	value *ApiAudioInputsMicrophoneBeamDirectionGet200Response
	isSet bool
}

func (v NullableApiAudioInputsMicrophoneBeamDirectionGet200Response) Get() *ApiAudioInputsMicrophoneBeamDirectionGet200Response {
	return v.value
}

func (v *NullableApiAudioInputsMicrophoneBeamDirectionGet200Response) Set(val *ApiAudioInputsMicrophoneBeamDirectionGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableApiAudioInputsMicrophoneBeamDirectionGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableApiAudioInputsMicrophoneBeamDirectionGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiAudioInputsMicrophoneBeamDirectionGet200Response(val *ApiAudioInputsMicrophoneBeamDirectionGet200Response) *NullableApiAudioInputsMicrophoneBeamDirectionGet200Response {
	return &NullableApiAudioInputsMicrophoneBeamDirectionGet200Response{value: val, isSet: true}
}

func (v NullableApiAudioInputsMicrophoneBeamDirectionGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiAudioInputsMicrophoneBeamDirectionGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


